definitions:
  dto.Admin:
    properties:
      email:
        description: 信箱
        example: henry@gmail.com
        type: string
      id:
        description: 帳戶id
        example: 1
        type: integer
      lv:
        description: 身份 (1:一般管理員)
        example: 1
        type: integer
      nickname:
        description: 暱稱
        example: henry
        type: string
    type: object
  logindto.User:
    properties:
      account:
        description: 帳號
        example: henry@gmail.com
        type: string
      account_type:
        description: 帳號類型 (1:Email註冊/2:FB註冊/3:Google註冊/4:Line註冊)
        example: 1
        type: integer
      birthday:
        description: 生日
        example: "1991-02-27"
        type: string
      create_at:
        description: 創建日期
        example: "2021-06-01 12:00:00"
        type: string
      device_token:
        description: 推播 Token
        example: f144b48d9695...
        type: string
      email:
        description: 信箱
        example: henry@gmail.com
        type: string
      experience:
        description: 經驗 (0:未指定/1:初學/2:中級/3:中高/4:專業)
        example: 2
        type: integer
      height:
        description: 身高
        example: 176.5
        type: number
      id:
        description: 帳戶id
        example: 10001
        type: integer
      nickname:
        description: 暱稱
        example: Henry
        type: string
      sex:
        description: 性別 (m:男/f:女)
        example: m
        type: string
      target:
        description: 目標 (0:未指定/1:減重/2:維持健康/3:增肌)
        example: 3
        type: integer
      update_at:
        description: 修改日期
        example: "2021-06-01 12:00:00"
        type: string
      user_status:
        description: 用戶狀態 (1:正常/2:違規/3:刪除)
        example: 1
        type: integer
      user_type:
        description: 用戶狀態 (1:一般用戶/2:訂閱用戶)
        example: 1
        type: integer
      weight:
        description: 體重
        example: 72.5
        type: number
    type: object
  model.ErrorResult:
    properties:
      code:
        description: 錯誤碼
        example: 9000
        type: integer
      data:
        description: 回傳資料
        type: object
      msg:
        description: 錯誤訊息
        example: system error!
        type: string
    type: object
  model.SuccessLoginResult:
    properties:
      code:
        description: 狀態碼
        example: 0
        type: integer
      data:
        description: 回傳資料
        type: object
      msg:
        description: 成功訊息
        example: success!
        type: string
      token:
        description: Token
        example: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2MTQ0MDc3NjMsInN1YiI6IjEwMDEzIn0.Z5UeEC8ArCVYej9kI1paXD2f5FMFiTfeLpU6e_CZZw0
        type: string
    type: object
  model.SuccessResult:
    properties:
      code:
        description: 狀態碼
        example: 0
        type: integer
      data:
        description: 回傳資料
        type: object
      msg:
        description: 成功訊息
        example: success!
        type: string
    type: object
  registerdto.OTP:
    properties:
      otp_code:
        description: 信箱驗證碼
        example: "254235"
        type: string
    type: object
  registerdto.Register:
    properties:
      user_id:
        description: 用戶ID
        example: 10001
        type: integer
    type: object
  validator.AdminLoginBody:
    properties:
      email:
        description: 信箱
        example: henry@gmail.com
        type: string
      password:
        description: 密碼 (8~16字元)
        example: "12345678"
        type: string
    required:
    - email
    - password
    type: object
  validator.EmailBody:
    properties:
      email:
        example: test@gmail.com
        type: string
    required:
    - email
    type: object
  validator.RegisterForEmailBody:
    properties:
      email:
        description: 信箱
        example: test@gmail.com
        type: string
      email_otp:
        description: 信箱驗證碼
        example: "531476"
        type: string
      nickname:
        description: 暱稱 (1~16字元)
        example: henry
        type: string
      password:
        description: 密碼 (8~16字元)
        example: "12345678"
        type: string
    required:
    - email
    - email_otp
    - nickname
    - password
    type: object
  validator.UserLoginByEmailBody:
    properties:
      email:
        description: 信箱
        example: test@gmail.com
        type: string
      password:
        description: 密碼 (8~16字元)
        example: "12345678"
        type: string
    required:
    - email
    - password
    type: object
  validator.ValidateEmailDupBody:
    properties:
      email:
        description: 信箱
        example: henry@gmail.com
        type: string
    required:
    - email
    type: object
  validator.ValidateNicknameDupBody:
    properties:
      nickname:
        description: 暱稱 (1~16字元)
        example: henry
        type: string
    required:
    - nickname
    type: object
info:
  contact: {}
  description: 健身平台 api
  title: fitness api
paths:
  /login/user/email:
    post:
      consumes:
      - application/json
      description: 用戶使用信箱登入
      parameters:
      - description: 輸入參數
        in: body
        name: json_body
        required: true
        schema:
          $ref: '#/definitions/validator.UserLoginByEmailBody'
      produces:
      - application/json
      responses:
        "200":
          description: 登入成功
          schema:
            allOf:
            - $ref: '#/definitions/model.SuccessLoginResult'
            - properties:
                data:
                  $ref: '#/definitions/logindto.User'
              type: object
        "400":
          description: 登入失敗
          schema:
            $ref: '#/definitions/model.ErrorResult'
      summary: 用戶使用信箱登入
      tags:
      - Login
  /manager/login:
    post:
      consumes:
      - application/json
      description: 管理員登入
      parameters:
      - description: 輸入參數
        in: body
        name: json_body
        required: true
        schema:
          $ref: '#/definitions/validator.AdminLoginBody'
      produces:
      - application/json
      responses:
        "200":
          description: 登入成功
          schema:
            allOf:
            - $ref: '#/definitions/model.SuccessLoginResult'
            - properties:
                data:
                  $ref: '#/definitions/dto.Admin'
              type: object
        "400":
          description: 登入失敗
          schema:
            $ref: '#/definitions/model.ErrorResult'
      summary: 管理員登入
      tags:
      - Manager
  /manager/logout:
    post:
      consumes:
      - application/json
      description: 管理員登出
      produces:
      - application/json
      responses:
        "200":
          description: 登出成功
          schema:
            $ref: '#/definitions/model.SuccessResult'
        "400":
          description: 登出失敗
          schema:
            $ref: '#/definitions/model.ErrorResult'
      security:
      - icebaby_admin_token: []
      summary: 管理員登出
      tags:
      - Manager
  /migrate/down:
    put:
      consumes:
      - application/json
      description: 回滾 Schema 至初始版本
      produces:
      - application/json
      responses:
        "200":
          description: 成功!
          schema:
            $ref: '#/definitions/model.SuccessResult'
        "400":
          description: 失敗!
          schema:
            $ref: '#/definitions/model.ErrorResult'
      security:
      - icebaby_admin_token: []
      summary: 回滾 Schema 至初始版本
      tags:
      - Migrate
  /migrate/down/{step}:
    put:
      consumes:
      - application/json
      description: 將 Schema 回滾N個版本
      parameters:
      - description: 版本跨度
        in: path
        name: step
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: 成功!
          schema:
            $ref: '#/definitions/model.SuccessResult'
        "400":
          description: 失敗!
          schema:
            $ref: '#/definitions/model.ErrorResult'
      security:
      - icebaby_admin_token: []
      summary: 將 Schema 回滾N個版本
      tags:
      - Migrate
  /migrate/force/{version}:
    put:
      consumes:
      - application/json
      description: Schema 升級時遇到錯誤時的操作模式
      parameters:
      - description: 版本號
        in: path
        name: version
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: 成功!
          schema:
            $ref: '#/definitions/model.SuccessResult'
        "400":
          description: 失敗!
          schema:
            $ref: '#/definitions/model.ErrorResult'
      security:
      - icebaby_admin_token: []
      summary: 修正 Schema 版本並解除錯誤狀態
      tags:
      - Migrate
  /migrate/up:
    put:
      consumes:
      - application/json
      description: 將 Schema 升至最新版本
      produces:
      - application/json
      responses:
        "200":
          description: 成功!
          schema:
            $ref: '#/definitions/model.SuccessResult'
        "400":
          description: 失敗!
          schema:
            $ref: '#/definitions/model.ErrorResult'
      security:
      - icebaby_admin_token: []
      summary: 將 Schema 升至最新版本
      tags:
      - Migrate
  /migrate/up/{step}:
    put:
      consumes:
      - application/json
      description: 將 Schema 升級N個版本
      parameters:
      - description: 版本跨度
        in: path
        name: step
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: 成功!
          schema:
            $ref: '#/definitions/model.SuccessResult'
        "400":
          description: 失敗!
          schema:
            $ref: '#/definitions/model.ErrorResult'
      security:
      - icebaby_admin_token: []
      summary: 將 Schema 升級N個版本
      tags:
      - Migrate
  /migrate/version:
    get:
      consumes:
      - application/json
      description: 獲取當前 Schema 版本
      produces:
      - application/json
      responses:
        "200":
          description: 成功!
          schema:
            $ref: '#/definitions/model.SuccessResult'
        "400":
          description: 失敗!
          schema:
            $ref: '#/definitions/model.ErrorResult'
      security:
      - icebaby_admin_token: []
      summary: 獲取當前 Schema 版本
      tags:
      - Migrate
  /migrate/version/{version}:
    put:
      consumes:
      - application/json
      description: 升級至指定 Schema 版本
      parameters:
      - description: 版本號
        in: path
        name: version
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: 成功!
          schema:
            $ref: '#/definitions/model.SuccessResult'
        "400":
          description: 失敗!
          schema:
            $ref: '#/definitions/model.ErrorResult'
      security:
      - icebaby_admin_token: []
      summary: 升級至指定 Schema 版本
      tags:
      - Migrate
  /register/email:
    post:
      consumes:
      - application/json
      description: 使用信箱註冊
      parameters:
      - description: 輸入參數
        in: body
        name: json_body
        required: true
        schema:
          $ref: '#/definitions/validator.RegisterForEmailBody'
      produces:
      - application/json
      responses:
        "200":
          description: 註冊成功
          schema:
            allOf:
            - $ref: '#/definitions/model.SuccessResult'
            - properties:
                data:
                  $ref: '#/definitions/registerdto.Register'
              type: object
        "400":
          description: 註冊失敗
          schema:
            $ref: '#/definitions/model.ErrorResult'
      summary: 使用信箱註冊
      tags:
      - Register
  /register/email/otp:
    post:
      consumes:
      - application/json
      description: 發送 Email OTP
      parameters:
      - description: 輸入參數
        in: body
        name: Parameter
        required: true
        schema:
          $ref: '#/definitions/validator.EmailBody'
      produces:
      - application/json
      responses:
        "200":
          description: 驗證郵件已寄出
          schema:
            allOf:
            - $ref: '#/definitions/model.SuccessResult'
            - properties:
                data:
                  $ref: '#/definitions/registerdto.OTP'
              type: object
        "400":
          description: 發送失敗
          schema:
            $ref: '#/definitions/model.ErrorResult'
      summary: 發送 Email OTP
      tags:
      - Register
  /register/email/validate:
    post:
      consumes:
      - application/json
      description: 驗證信箱是否可使用
      parameters:
      - description: 輸入參數
        in: body
        name: json_body
        required: true
        schema:
          $ref: '#/definitions/validator.ValidateEmailDupBody'
      produces:
      - application/json
      responses:
        "200":
          description: 此暱稱可使用
          schema:
            $ref: '#/definitions/model.SuccessResult'
        "400":
          description: 該資料已存在
          schema:
            $ref: '#/definitions/model.ErrorResult'
      summary: 驗證信箱是否可使用
      tags:
      - Register
  /register/nickname/validate:
    post:
      consumes:
      - application/json
      description: 驗證暱稱是否可使用
      parameters:
      - description: 輸入參數
        in: body
        name: json_body
        required: true
        schema:
          $ref: '#/definitions/validator.ValidateNicknameDupBody'
      produces:
      - application/json
      responses:
        "200":
          description: 此暱稱可使用
          schema:
            $ref: '#/definitions/model.SuccessResult'
        "400":
          description: 該資料已存在
          schema:
            $ref: '#/definitions/model.ErrorResult'
      summary: 驗證暱稱是否可使用
      tags:
      - Register
securityDefinitions:
  icebaby_admin_token:
    in: header
    name: Token
    type: apiKey
  icebaby_trainer_token:
    in: header
    name: Token
    type: apiKey
  icebaby_user_token:
    in: header
    name: Token
    type: apiKey
swagger: "2.0"
